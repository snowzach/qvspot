syntax="proto3";
package qvspot;

import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

import "qvspot/qvspot.proto";

option go_package = "github.com/snowzach/qvspot/qvspot";

service ClientRPC {

    // Search for for Products or Items
    rpc Search(SearchRequest) returns (SearchResponse) {
        option (google.api.http) = {
            post: "/search"
            body: "*"
            additional_bindings: {
                get: "/search"
            }
        };
    }
    
}

// Product Search Filter
message SearchProduct {
    // product id
    string id = 1;
    // string metadata
    map<string, StringList> attr = 2 [(gogoproto.jsontag) = "attr"]; // Remove omitempty
    // numeric metadata
    map<string, Range> attr_num = 3 [(gogoproto.jsontag) = "attr_num"]; // Remove omitempty
}

// Search Request
message SearchRequest {

    // General search term
    string search = 1;

    // Show results aggregated by product
    bool by_product = 2;

    // Product specific search
    SearchProduct product = 3;

    // string metadata
    map<string, StringList> attr = 4 [(gogoproto.jsontag) = "attr"]; // Remove omitempty
    // numeric metadata
    map<string, Range> attr_num = 5 [(gogoproto.jsontag) = "attr_num"]; // Remove omitempty
 
    // location filter
    qvspot.Position position = 6;
    string distance = 7;

    int32 offset = 14;
    int32 limit = 15;
    
}

// Search Response
message SearchResponse {
    repeated SearchResult results = 1; 
}

// Search Result
message SearchResult {
    qvspot.Product product = 1;
    qvspot.Item item = 2;

    // The count of items
    int64 item_count = 3;
}

// Number range
message Range {
    double min = 1;
    double max = 2;
}