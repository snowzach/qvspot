syntax="proto3";
package qvspot;

import "google/protobuf/timestamp.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "github.com/snowzach/qvspot/qvspot";

message Vendor {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        example: { value: '{"id": "vendor123", "name": "vendor123"}' }
    };

    string id = 1;
    string name = 2;
}

// Product
message Product {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        example: { value: '{"id": "test123", "created": "2020-01-01T12:10:30Z", "updated": "2020-01-01T12:10:30Z", "name": "test123", "desc": "test123 description", "attr": { "mystring1": "meta1", "mystring2": [ "meta2", "meta3" ] }, "attr_num": { "mynum1": 123.456 }, "attr_list": { "mylist1": ["a","b","c"] } }' }
    };

    // id field
    string id = 1;
    // created
    google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true];
    // updated
    google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true];
    // name
    string name = 4;
    // description
    string desc = 5;
    // picture url
    string pic_url = 6;
    
    // string metadata
    map<string, StringList> attr = 13 [(gogoproto.jsontag) = "attr,omitempty"]; // Remove omitempty
    // numeric metadata
    map<string, double> attr_num = 14 [(gogoproto.jsontag) = "attr_num,omitempty"]; // Remove omitempty

    // owning vendor_id
    string vendor_id = 15;
}

// Vendor Location
message VendorLocation {
    // id field
    string id = 1;
    // created
    google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true];
    // updated
    google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true];
    // location name
    string name = 5;
    // location name
    string desc = 6;
    // location
    Location location = 7;

    // owning vendor_id
    string vendor_id = 15;
}

// Product Location
message ProductLocation {
    // Tuple of product_id,vendor_location_id
    string id = 1;
    // created
    google.protobuf.Timestamp created = 2 [(gogoproto.stdtime) = true];
    // updated
    google.protobuf.Timestamp updated = 3 [(gogoproto.stdtime) = true];
    // vendor location id
    string vendor_location_id = 5;
    // product id
    string product_id = 6;
    // stock
    sint64 stock = 7;
    // price
    double price = 8;
    // location - for denormalization
    Location location = 9;

    // unit - there is only one - like an appointment
    bool unit = 12;
    // start/end for atomic
    google.protobuf.Timestamp start_time = 13 [(gogoproto.stdtime) = true];
    google.protobuf.Timestamp end_time = 14 [(gogoproto.stdtime) = true];

    // owning vendor id
    string vendor_id = 15;
}

// location
message Location {
    // location latitude
    double lat = 4;
    // location longitude
    double long = 5;
}

// string list
message StringList {
    repeated string list = 1;
}
